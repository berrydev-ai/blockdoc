{"version":3,"file":"server.js","sources":["../../../src/api/server.js"],"sourcesContent":["/**\n * BlockDoc API Server\n *\n * Express middleware for creating a BlockDoc API server\n * Note: This is a minimal implementation meant for simple use cases.\n * For production, use a proper database and more robust error handling.\n */\n\nexport function createBlockDocApi(options = {}) {\n  // This function returns Express middleware that handles BlockDoc API endpoints\n  return function blockDocApiMiddleware(req, res, next) {\n    // Skip non-matching routes\n    if (!req.path.startsWith('/api/blockdoc/')) {\n      return next();\n    }\n    \n    const path = req.path.replace('/api/blockdoc/', '');\n    const pathParts = path.split('/').filter(Boolean);\n    \n    // Route handling\n    try {\n      if (pathParts[0] === 'documents') {\n        if (req.method === 'GET' && pathParts.length === 1) {\n          // GET /api/blockdoc/documents - List documents\n          return handleListDocuments(req, res, options);\n        } else if (req.method === 'POST' && pathParts.length === 1) {\n          // POST /api/blockdoc/documents - Create document\n          return handleCreateDocument(req, res, options);\n        } else if (req.method === 'GET' && pathParts.length === 2) {\n          // GET /api/blockdoc/documents/:id - Get document\n          return handleGetDocument(req, res, pathParts[1], options);\n        } else if (req.method === 'PUT' && pathParts.length === 2) {\n          // PUT /api/blockdoc/documents/:id - Update document\n          return handleUpdateDocument(req, res, pathParts[1], options);\n        } else if (req.method === 'DELETE' && pathParts.length === 2) {\n          // DELETE /api/blockdoc/documents/:id - Delete document\n          return handleDeleteDocument(req, res, pathParts[1], options);\n        } else if (req.method === 'PATCH' && pathParts.length === 4 && pathParts[2] === 'blocks') {\n          // PATCH /api/blockdoc/documents/:id/blocks/:blockId - Update block\n          return handleUpdateBlock(req, res, pathParts[1], pathParts[3], options);\n        }\n      }\n      \n      // Render routes\n      if (pathParts[0] === 'render') {\n        if (req.method === 'POST' && pathParts.length === 2) {\n          if (pathParts[1] === 'html') {\n            // POST /api/blockdoc/render/html - Render to HTML\n            return handleRenderToHTML(req, res);\n          } else if (pathParts[1] === 'markdown') {\n            // POST /api/blockdoc/render/markdown - Render to Markdown\n            return handleRenderToMarkdown(req, res);\n          }\n        }\n      }\n      \n      // No matching route\n      res.status(404).json({ error: 'Not found' });\n    } catch (error) {\n      console.error('BlockDoc API Error:', error);\n      res.status(500).json({ error: error.message || 'Internal server error' });\n    }\n  };\n}\n\n// Route handlers\n// Note: These functions would typically interact with a database\n\nfunction handleListDocuments(req, res, options) {\n  const { storage = {} } = options;\n  const limit = parseInt(req.query.limit) || 10;\n  const offset = parseInt(req.query.offset) || 0;\n  \n  // In a real implementation, this would query a database\n  const documents = Object.values(storage)\n    .slice(offset, offset + limit)\n    .map(doc => ({\n      id: doc.id,\n      title: doc.article.title,\n      updatedAt: doc.updatedAt\n    }));\n  \n  res.json({\n    documents,\n    total: Object.keys(storage).length,\n    limit,\n    offset\n  });\n}\n\nfunction handleCreateDocument(req, res, options) {\n  const { storage = {}, onDocumentCreated } = options;\n  const document = req.body;\n  \n  // Validate document\n  if (!document || !document.article || !document.article.title) {\n    return res.status(400).json({ error: 'Invalid document format' });\n  }\n  \n  // Generate ID if not provided\n  const id = document.id || generateId();\n  \n  // Store document\n  const storedDocument = {\n    ...document,\n    id,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  };\n  \n  storage[id] = storedDocument;\n  \n  // Trigger event handler if provided\n  if (typeof onDocumentCreated === 'function') {\n    onDocumentCreated(storedDocument);\n  }\n  \n  res.status(201).json({ id, message: 'Document created' });\n}\n\nfunction handleGetDocument(req, res, documentId, options) {\n  const { storage = {} } = options;\n  \n  if (!storage[documentId]) {\n    return res.status(404).json({ error: 'Document not found' });\n  }\n  \n  res.json(storage[documentId]);\n}\n\nfunction handleUpdateDocument(req, res, documentId, options) {\n  const { storage = {}, onDocumentUpdated } = options;\n  \n  if (!storage[documentId]) {\n    return res.status(404).json({ error: 'Document not found' });\n  }\n  \n  const document = req.body;\n  \n  // Validate document\n  if (!document || !document.article || !document.article.title) {\n    return res.status(400).json({ error: 'Invalid document format' });\n  }\n  \n  // Update document\n  const updatedDocument = {\n    ...document,\n    id: documentId,\n    createdAt: storage[documentId].createdAt,\n    updatedAt: new Date().toISOString()\n  };\n  \n  storage[documentId] = updatedDocument;\n  \n  // Trigger event handler if provided\n  if (typeof onDocumentUpdated === 'function') {\n    onDocumentUpdated(updatedDocument);\n  }\n  \n  res.json({ message: 'Document updated' });\n}\n\nfunction handleDeleteDocument(req, res, documentId, options) {\n  const { storage = {}, onDocumentDeleted } = options;\n  \n  if (!storage[documentId]) {\n    return res.status(404).json({ error: 'Document not found' });\n  }\n  \n  const deletedDocument = storage[documentId];\n  delete storage[documentId];\n  \n  // Trigger event handler if provided\n  if (typeof onDocumentDeleted === 'function') {\n    onDocumentDeleted(deletedDocument);\n  }\n  \n  res.status(204).end();\n}\n\nfunction handleUpdateBlock(req, res, documentId, blockId, options) {\n  const { storage = {}, onBlockUpdated } = options;\n  \n  if (!storage[documentId]) {\n    return res.status(404).json({ error: 'Document not found' });\n  }\n  \n  const document = storage[documentId];\n  const blockIndex = document.article.blocks.findIndex(block => block.id === blockId);\n  \n  if (blockIndex === -1) {\n    return res.status(404).json({ error: 'Block not found' });\n  }\n  \n  // Update block\n  const updates = req.body;\n  const block = document.article.blocks[blockIndex];\n  \n  // Cannot change id or type\n  const { id, type, ...allowedUpdates } = updates;\n  \n  // Apply updates\n  const updatedBlock = {\n    ...block,\n    ...allowedUpdates\n  };\n  \n  document.article.blocks[blockIndex] = updatedBlock;\n  document.updatedAt = new Date().toISOString();\n  \n  // Trigger event handler if provided\n  if (typeof onBlockUpdated === 'function') {\n    onBlockUpdated(document, updatedBlock);\n  }\n  \n  res.json(updatedBlock);\n}\n\n// Render handlers\nfunction handleRenderToHTML(req, res) {\n  const { renderToHTML } = require('../renderers/html.js');\n  const document = req.body;\n  \n  if (!document || !document.article) {\n    return res.status(400).json({ error: 'Invalid document format' });\n  }\n  \n  try {\n    const html = renderToHTML(document.article);\n    res.send(html);\n  } catch (error) {\n    res.status(400).json({ error: `Rendering failed: ${error.message}` });\n  }\n}\n\nfunction handleRenderToMarkdown(req, res) {\n  const { renderToMarkdown } = require('../renderers/markdown.js');\n  const document = req.body;\n  \n  if (!document || !document.article) {\n    return res.status(400).json({ error: 'Invalid document format' });\n  }\n  \n  try {\n    const markdown = renderToMarkdown(document.article);\n    res.send(markdown);\n  } catch (error) {\n    res.status(400).json({ error: `Rendering failed: ${error.message}` });\n  }\n}\n\n// Helper function to generate a simple ID\nfunction generateId() {\n  return `doc_${Date.now()}_${Math.random().toString(36).substring(2, 10)}`;\n}"],"names":["createBlockDocApi","options","blockDocApiMiddleware","req","res","next","path","startsWith","replace","pathParts","split","filter","Boolean","method","length","handleListDocuments","handleCreateDocument","handleGetDocument","handleUpdateDocument","handleDeleteDocument","handleUpdateBlock","handleRenderToHTML","handleRenderToMarkdown","status","json","error","console","message","storage","limit","parseInt","query","offset","documents","Object","values","slice","map","doc","id","title","article","updatedAt","total","keys","onDocumentCreated","document","body","generateId","storedDocument","createdAt","Date","toISOString","documentId","onDocumentUpdated","updatedDocument","onDocumentDeleted","deletedDocument","end","blockId","onBlockUpdated","blockIndex","blocks","findIndex","block","updates","type","allowedUpdates","updatedBlock","renderToHTML","require","html","send","renderToMarkdown","markdown","now","Math","random","toString","substring"],"mappings":"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"}